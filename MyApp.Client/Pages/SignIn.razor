@page "/signin"
@inherits AuthComponentBase
@inject ServiceStackStateProvider provider
@inject NavigationManager NavigationManager

@if (IsAuthenticated)
{
    NavigationManager.NavigateTo(NavigationManager.GetReturnUrl(), true);
    return;
}

<h1 class="fs-2 mb-3">Sign In</h1>

<form @onsubmit="_ => OnSubmit()" class=@ClassNames("max-w-xl", apiResult.IsError ? " was-validated" : "")>
    <ErrorSummary Status=@apiResult.ErrorStatus 
                    VisibleFields=@(new[]{ nameof(Authenticate.UserName), nameof(Authenticate.Password) })></ErrorSummary>
    <div class="mb-3 form-floating">
        <input type="email" id="userName" placeholder="Enter email" @bind-value="@Email" required
                class=@ClassNames("form-control", apiResult.InvalidClass(nameof(Authenticate.UserName)))>
        <ErrorField Status=@apiResult.ErrorStatus Name=@nameof(Authenticate.UserName)></ErrorField>
        <label for="userName">Email address</label>
    </div>
    <div class="mb-3 form-floating">
        <input type="password" id="password" placeholder="Password" @bind-value="@Password" required
                class=@ClassNames("form-control", apiResult.InvalidClass(nameof(Authenticate.Password)))>
        <ErrorField Status=@apiResult.ErrorStatus Name=@nameof(Authenticate.Password)></ErrorField>
        <label for="password">Password</label>
    </div>

    <div class="mb-3">
        <button type="submit" class="btn btn-primary">Login</button>
        <NavLink href="/signup" class="btn btn-outline-primary">Register New User</NavLink>
    </div>
</form>

<div class="mt-5 flex">
    <span class="me-2">Quick Links:</span>
    <button class="btn btn-outline-secondary mb-1" @onclick='_ => SetUser("admin@email.com", "p@55wOrd")'>admin@email.com</button>
    <button class="btn btn-outline-secondary mb-1" @onclick='_ => SetUser("manager@email.com", "p@55wOrd")'>manager@email.com</button>
    <button class="btn btn-outline-secondary mb-1" @onclick='_ => SetUser("employee@email.com", "p@55wOrd")'>employee@email.com</button>
    <button class="btn btn-outline-secondary mb-1" @onclick='_ => SetUser("new@user.com", "p@55wOrd")'>new@user.com</button>
</div>

<div class="mt-4">
    <SrcLink href="https://github.com/NetCoreTemplates/blazor-wasm/blob/master/MyApp.Client/Pages/SignIn.razor" IconSrc="/img/blazor.svg" />
</div>

@code {
    ApiResult<AuthenticateResponse> apiResult = new();

    string Email { get; set; } = "";
    string Password { get; set; } = "";

    void SetUser(string email, string password)
    {
        Email = email;
        Password = password;
    }

    async Task OnSubmit()
    {
        apiResult.Reset();

        if (Email.IsNullOrEmpty())
            apiResult.AddFieldError(nameof(Authenticate.UserName), "Email is required");

        if (Password.IsNullOrEmpty())
            apiResult.AddFieldError(nameof(Authenticate.Password), "Password is required");

        if (apiResult.IsError) return;

        apiResult = await provider.LoginAsync(Email, Password);

        if (apiResult.IsSuccess)
            NavigationManager.NavigateTo(NavigationManager.GetReturnUrl(), true);
    }
} 