@page "/docs/{path?}"
@inherits AppComponentBase
@inject HttpClient Http
@using Markdig
@using Markdig.Syntax

@if (Doc.Response?.Preview != null)
{
    <div class="prose lg:prose-xl m-3">
        <div class="markdown-body">
            @((MarkupString)Doc.Response!.Preview)
        </div>
    </div>

    <div class="my-5 flex justify-center">
        <SrcLink href=@($"https://github.com/NetCoreTemplates/blazor-wasm/blob/master/MyApp.Client/wwwroot/content/{Doc.Response!.FileName}") IconClass="oi oi-document" />
        <SrcLink href="https://github.com/NetCoreTemplates/blazor-wasm/blob/master/MyApp.Client/Pages/Docs.razor" IconSrc="/img/blazor.svg" />
    </div>
}
else if (Doc.ErrorStatus == null)
{
    <div>Loading...</div>
}

<ErrorSummary Status=@Doc.ErrorStatus />

@code {
    [Parameter]
    public string? Path { get; set; }

    ApiResult<MarkdownFileInfo> Doc { get; set; } = new();

    async Task loadDoc() => 
        Doc = await MarkdownUtils.LoadDocumentAsync(Path!, doc => Http.GetStringAsync($"/content/{doc.FileName}"));

    protected override async Task OnParametersSetAsync() => await loadDoc();
    protected override async Task OnInitializedAsync() => await loadDoc();
}
