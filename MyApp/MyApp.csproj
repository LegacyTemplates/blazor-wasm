<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="6.0.0" />
        <PackageReference Include="ServiceStack" Version="5.*" />
        <PackageReference Include="ServiceStack.OrmLite.Sqlite.Data" Version="5.*" />
        <PackageReference Include="ServiceStack.Server" Version="5.13.3" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\MyApp.Client\MyApp.Client.csproj" />
        <ProjectReference Include="..\MyApp.ServiceInterface\MyApp.ServiceInterface.csproj" />
        <ProjectReference Include="..\MyApp.ServiceModel\MyApp.ServiceModel.csproj" />
    </ItemGroup>

    <!-- Populated in release.yml with GitHub Actions secrets -->
    <Target Name="DEPLOY_ACTION_API" AfterTargets="Build" Condition="$(DEPLOY_API) != ''">
        <Exec Command="echo DEPLOY_API=$(DEPLOY_API)" />

        <!-- Update Production settings with DEPLOY_API Blazor UI should use  -->
        <WriteLinesToFile File="$(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/appsettings.Production.json" Lines="$([System.IO.File]::ReadAllText($(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/appsettings.Production.json).Replace('{DEPLOY_API}',$(DEPLOY_API)))" Overwrite="true" Encoding="UTF-8" />

        <!-- 404.html SPA fallback (supported by GitHub Pages, Cloudflare & Netlify CDNs) -->
        <Copy SourceFiles="$(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/index.html" DestinationFiles="$(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/404.html" />

        <!-- define /api proxy routes (supported by Cloudflare or Netlify CDNs)  -->
        <WriteLinesToFile File="$(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/_redirects" Lines="$([System.IO.File]::ReadAllText($(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/_redirects).Replace('{DEPLOY_API}',$(DEPLOY_API)))" Overwrite="true" Encoding="UTF-8" />
    </Target>
    <Target Name="DEPLOY_ACTION_CDN" AfterTargets="Build" Condition="$(DEPLOY_CDN) != ''">
        <Exec Command="echo DEPLOY_CDN=$(DEPLOY_CDN)" />

        <!-- Define custom domain name that CDN should use -->
        <Exec Condition="$(DEPLOY_CDN) != ''" Command="echo $(DEPLOY_CDN) &gt; $(MSBuildProjectDirectory)/../MyApp.Client/wwwroot/CNAME" />
    </Target>

    <!-- Run in release.yml to prerender markdown content -->
    <Target Name="APP_TASKS_ACTION" AfterTargets="Build" Condition="$(APP_TASKS) != ''">
        <Exec Command=" dotnet run -task prerender:markdown -index ../MyApp.Client/wwwroot/index.html ../MyApp.Client/wwwroot/content ../MyApp.Client/wwwroot/docs"
              Condition="$(APP_TASKS.Contains('prerender:markdown'))"/>
    </Target>

    <PropertyGroup>
        <ClientDir>$(MSBuildProjectDirectory)/../MyApp.Client</ClientDir>
    </PropertyGroup>
    <Target Name="AppTasks" AfterTargets="Build" Condition="$(APP_TASKS) != ''">
        <CallTarget Targets="PrerenderMarkdown" Condition="$(APP_TASKS.Contains('prerender'))" />
        <CallTarget Targets="PrerenderPages" Condition="$(APP_TASKS.Contains('prerender'))" />
    </Target>
    <Target Name="PrerenderMarkdown">
        <Message Text="PrerenderMarkdown..." />
        <Exec Command="dotnet run -task prerender:markdown -index $(ClientDir)/wwwroot/index.html $(ClientDir)/wwwroot/content $(ClientDir)/wwwroot/docs" />
    </Target>
    <Target Name="PrerenderPages">
        <Message Text="PrerenderPages..." />
        <PropertyGroup>
            <GettingStartedContents>$([System.IO.File]::ReadAllText('$(ClientDir)/Shared/GettingStarted.razor'))</GettingStartedContents>
            <IndexFileContents>
                $([System.IO.File]::ReadAllText('$(ClientDir)/Pages/Index.razor').Replace('<GettingStarted />',$(GettingStartedContents)))
            </IndexFileContents>
        </PropertyGroup>
        <WriteLinesToFile File="$(ClientDir)/wwwroot/prerender/index.html" Lines="$(IndexFileContents)" Overwrite="true" />

        <Exec Command="dotnet run -task prerender:clean $(ClientDir)/wwwroot/prerender" />
    </Target>


</Project>
